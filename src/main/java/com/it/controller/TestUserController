package com.it.mapper;

import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.it.entity.TestUser;
import com.it.service.TestUserService;

@RestController
public class TestUserController {

    @Autowired
    private TestUserService testUserService;

    /**
     * 查询所有记录
     *
     * @return 返回集合，没有返回空List
     */
    @RequestMapping("list")
    public List<TestUser> listAll() {
        return testUserService.listAll();
    }


    /**
     * 根据主键查询
     *
     * @param id 主键
     * @return 返回记录，没有返回null
     */
    @RequestMapping("getById")
    public TestUser getById(Integer id) {
        return testUserService.getById(id);
    }
    
    /**
     * 新增，插入所有字段
     *
     * @param testUser 新增的记录
     * @return 返回影响行数
     */
    @RequestMapping("insert")
    public int insert(@RequestBody TestUser testUser) {
        return testUserService.insert(testUser);
    }
    
    /**
     * 新增，忽略null字段
     *
     * @param testUser 新增的记录
     * @return 返回影响行数
     */
    @RequestMapping("insert")
    public int insertIgnoreNull(@RequestBody TestUser testUser) {
        return testUserService.insertIgnoreNull(testUser);
    }
    
    /**
     * 修改，修改所有字段
     *
     * @param testUser 修改的记录
     * @return 返回影响行数
     */
    @RequestMapping("update")
    public int update(@RequestBody TestUser testUser) {
        return testUserService.update(testUser);
    }
    
    /**
     * 修改，忽略null字段
     *
     * @param testUser 修改的记录
     * @return 返回影响行数
     */
    @RequestMapping("updateIgnoreNull")
    public int updateIgnoreNull(@RequestBody TestUser testUser) {
        return testUserService.updateIgnoreNull(testUser);
    }
    
    /**
     * 删除记录
     *
     * @param testUser 待删除的记录
     * @return 返回影响行数
     */
    @RequestMapping("delete")
    public int delete(@RequestBody TestUser testUser) {
        return testUserService.delete(testUser);
    }
    
}